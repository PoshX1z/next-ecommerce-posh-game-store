// Prisma initiation (db pull, db push and generated prisma/client). 

datasource db{
    provider = "postgresql" 
    url = env("DATABASE_URI")
}
// Generate typescript compatible prisma client in next js project.   
generator client{
    provider = "prisma-client-js" 
    output = "./generated/client"
}

// Model (This will be created as actual table on database when using npx prisma db push).

model Product{
    id String @id @default(cuid())
    name String
    slug String @unique
    image String
    platform String
    platformImageIcon String
    edition String
    description String
    price Int
    countInStock Int
    numSales Int
    releaseDate String
    developer String
    review Int
    publisher String
    delivery String
    tag String?

    createdAt DateTime @default(now())
    updateAt DateTime @updatedAt
}

model User{
    id String @id @default(cuid())
    username String @unique
    email String @unique
    password String
    emailVerified DateTime?
    accounts Account[]
    sessions Session[]
}

model Account {
    id String @id @default(cuid())
    userId String
    type String
    provider String
    providerAccountId String
    refresh_token String
    access_token String
    expires_at Int?
    token_type String?
    scope String?
    id_token String?
    session_state String?
    user User @relation(fields:[userId], references: [id])

    @@unique([provider, providerAccountId])
}

model Session{
    id String @id @default(cuid())
    sessionToken String @unique
    userId String
    expires DateTime
    user User @relation(fields:[userId],references: [id])
}